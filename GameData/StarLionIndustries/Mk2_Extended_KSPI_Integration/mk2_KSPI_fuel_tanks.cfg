//mk-2 form KSPI parts
+PART[mk2UST]:NEEDS[WarpPlugin]:FIRST
{
	@name = M2X_PreCooler
	@mass += 0.05
	@TechRequired = supersonicFlight
	@cost = 750
	@category = Aero
	@title = Mk2 Pre-Cooler
	@description = A magnificent piece of engineering that pre-cools the air flow from atmospheric engines, preventing overheating at high speeds.
	MODULE
	{
		name = FNModulePreecooler
	}
	!RESOURCE[*]{}
	!RESOURCE[*]{}
	!RESOURCE[*]{}
	!RESOURCE[*]{}
}
+PART[mk2UST]:NEEDS[WarpPlugin]:FIRST
{
	@name = M2X_Antimatter_Storage_Tank
	@mass = .62
	@TechRequired = exoticFuelStorage
	@cost = 2501573
	@title = Mk2 Antimatter Containment Device
	@description = A Mk2-form container for Antimatter.  Antimatter not included.
	
	!RESOURCE[*]{}
	!RESOURCE[*]{}
	!RESOURCE[*]{}
	!RESOURCE[*]{}
	RESOURCE
	{
		name = Antimatter
		amount = 0
		maxAmount = 24646
	}
    MODULE
    {
		name = InterstellarFuelSwitch
		resourceGui = Antimatter
		resourceNames = Antimatter
		resourceAmounts = 24646
		%tankMass =  0
		
		%basePartMass = #$../mass$
		volumeMultiplier = 1.0
		massMultiplier = 1
		displayCurrentTankCost = false
		hasGUI = true
		availableInFlight = true
		availableInEditor = true
		showInfo = true
	}

	MODULE
	{
		name = AntimatterStorageTank
		chargeNeeded = 15.4
	}
}

//prepares all of mk2 Expansion's parts for IFS
@PART[*]:HAS[#author[SuicidalInsanity],@RESOURCE[Oxidizer],!RESOURCE[MonoPropellant]]:NEEDS[Mk2Expansion,InterstellarFuelSwitch,RealFuels|ModularFuelTanks]:FIRST
{
	@RESOURCE[LiquidFuel]
	{
		@amount += #$/../RESOURCE[Oxidizer]/amount$
		@maxAmount += #$/../RESOURCE[Oxidizer]/maxAmount$
	}
	!RESOURCE[Oxidizer]{}
}

//If neither MFT nor RF are present, then ALL tanks with any of Oxidizer, Monoprop, or XenonGas will get IFS
@PART[*]:HAS[@RESOURCE[Oxidizer]|@RESOURCE[MonoPropellant]|@RESOURCE[XenonGas]]:NEEDS[Mk2Expansion,InterstellarFuelSwitch,!RealFuels,!ModularFuelTanks]:FIRST
{
	%RESOURCE[LiquidFuel]
	{
		%amount += #$/../RESOURCE[Oxidizer]/amount$
		%maxAmount += #$/../RESOURCE[Oxidizer]/maxAmount$
	}
	!RESOURCE[Oxidizer]{}
	%RESOURCE[LiquidFuel]
	{
		%amount += #$/../RESOURCE[MonoPropellant]/amount$
		%maxAmount += #$/../RESOURCE[MonoPropellant]/maxAmount$
	}
	!RESOURCE[MonoPropellant]{}
	%RESOURCE[LiquidFuel]
	{
		%amount += #$/../RESOURCE[XenonGas]/amount$
		%maxAmount += #$/../RESOURCE[XenonGas]/maxAmount$
	}
	!RESOURCE[XenonGas]{}
}
//first IFS pass (runs as long as IFS itself and (known) resource support is present
@PART[*]:HAS[@RESOURCE[LiquidFuel],!RESOURCE[Oxidizer],!RESOURCE[MonoPropellant],!RESOURCE[ElectricCharge]]:NEEDS[InterstellarFuelSwitch,WarpPlugin|CommunityResourcePack]:FIRST
{
	%LionStatus = 1
	%MODULE[ModuleCrossFeed]{}

	%LFamount = #$/RESOURCE[LiquidFuel]/maxAmount$ //save original amount if no RF
	@RESOURCE[LiquidFuel]
	{
		@amount *= 9
		@maxAmount *= 9
	}
	
	ammoniaAmount = #$/LFamount$
	@ammoniaAmount *= 9
	
	//were not returning resource amount I intended. see if this makes more sense
	ArgonAmount = #$/LFamount$
	@ArgonAmount *= 450
	XenonAmount = #$/LFamount$
	@XenonAmount *= 90
	
	%percentage = 0
	%percentsquared = 0
	@percentage = #$/LFamount$
	@percentage /= 26880
	@percentage != 0.3333333
	@percentsquared = #$/percentage$
	@percentsquared != 2
	
    MODULE
    {
		name = InterstellarFuelSwitch
		
		resourceGui = Ammonia;Argon Gas;Carbon Dioxide (Cryo);CarbonMonoxide (Cryo);Deuterium (Cryo);Helium (Cryo);Helium-3 (Cryo);Hexaborane;Hydrazine;Hydrogen (Cryo);Hydrogen Peroxide (Cryo);Kerosene;Methane (Cryo);Nitrogen (Cryo);Oxygen (Cryo);Tritium (Cryo);Water;Xenon Gas;Structural
		
		resourceNames = LqdAmmonia;ArgonGas;LqdCO2;LqdCO;LqdDeuterium;LqdHelium;LqdHe3;Hexaborane;Hydrazine;LqdHydrogen;HTP;Kerosene;LqdMethane;LqdNitrogen;LqdOxygen;LqdTritium;Water;XenonGas;Structural

		resourceAmounts = #$/../RESOURCE[LiquidFuel]/maxAmount$;$/../ArgonAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../XenonAmount$;0

		@tankMass =  0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0

		%basePartMass = #$../mass$
		volumeMultiplier = 1.0
		massMultiplier = 1
		displayCurrentTankCost = false
		hasGUI = true
		availableInFlight = true
		availableInEditor = true
		showInfo = true
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdHelium
		resourceGUIName = LqdHelium
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 4.222
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdHe3
		resourceGUIName = Helium-3
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 4.222
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdDeuterium
		resourceGUIName = Deuterium
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 20.271
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdTritium
		resourceGUIName = Tritium
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 20.271
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdHydrogen
		resourceGUIName = LqdHydrogen
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 20.271
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdNitrogen
		resourceGUIName = LqdNitrogen
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 77.355
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdCO
		resourceGUIName = LqdCO
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 81.65
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdOxygen
		resourceGUIName = LqdOxygen
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 90.188
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdMethane
		resourceGUIName = LqdMethane
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 111.66
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = LqdCO2
		resourceGUIName = LqdCO2
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 220
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}

	MODULE
	{
		name = FNModuleCryostat
		resourceName = HTP
		resourceGUIName = HTP
		powerReqKW = 45
		boilOffRate = 0
		boilOffTemp = 220
		boilOffMultiplier = 1
		boilOffBase = 16000
		boilOffAddition = 8.97215e-5
	}
	
	@MODULE[FNModuleCryostat],*
	{
		@boilOffMultiplier *= #$../percentage$
		@powerReqKW *= #$../percentsquared$
		@boilOffRate *= #$../percentsquared$
	}
	MODULE
    {
		name = ModuleElementRadioactiveDecay
		decayConstant = 1.7915586e-9
		resourceName = LqdTritium
		decayProduct = LqdHe3
		convFactor = 1
    }
	@RESOURCE[LiquidFuel]
	{
		@name = LqdAmmonia
	}
}

//Stock FuelSwitch (runs if IFS but no metastock resource support is present)
@PART[*]:HAS[@RESOURCE[LiquidFuel],!RESOURCE[Oxidizer],!RESOURCE[ElectricCharge]]:NEEDS[InterstellarFuelSwitch,!WarpPlugin,!CommunityResourcePack]:FIRST//Stock Fuelswitch
{
	%MODULE[ModuleCrossFeed]
    { 
    }
	%percentage = 0
	%percentsquared = 0
	@percentage = #$/RESOURCE[LiquidFuel]/maxAmount$
	@percentage /= 26880
	
	@percentage != 0.3333333
	
	@percentsquared = #$/percentage$
	@percentsquared != 2
	%XenonAmount = #$/RESOURCE[LiquidFuel]/maxAmount$
	@XenonAmount *= 10
	
	%LF = #$/RESOURCE[LiquidFuel]/maxAmount$	
	%Oxi = #$/RESOURCE[LiquidFuel]/maxAmount$
	
	@LF *= .45
	@Oxi *= .55
    MODULE
    {
		name = InterstellarFuelSwitch
		resourceGui = LFO;LiquidFuel;Oxidizer;MonoPropellant;Xenon Gas;Structural
		resourceNames = LiquidFuel,Oxidizer;LiquidFuel;Oxidizer;MonoPropellant;XenonGas;Structural
		resourceAmounts = #$/../LF$,$/../Oxi$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../RESOURCE[LiquidFuel]/maxAmount$;$/../XenonAmount$;0
		%tankMass =  0;0;0;0;0;0


		%basePartMass = #$../mass$
		volumeMultiplier = 1.0
		massMultiplier = 1
		displayCurrentTankCost = false
		hasGUI = true
		availableInFlight = true
		availableInEditor = true
		showInfo = true
	}
}

//retains stock LiquidFuel & LFO if RealFuels (and therefor presumably not any RealEngine config pack) is not installed.

@PART[*]:HAS[@MODULE[InterstellarFuelSwitch],#LFamount[*]]:NEEDS[!RealFuels,WarpPlugin|CommunityResourcePack]
{
	%LF = #$LFamount$	
	%Oxi = #$LFamount$
	
	@LF *= .45
	@Oxi *= .55
	@MODULE[InterstellarFuelSwitch]
	{
		@resourceGui = Ammonia;Argon Gas;Carbon Dioxide (Cryo);CarbonMonoxide (Cryo);Deuterium (Cryo);Helium (Cryo);Helium-3 (Compressed Gas);Hexaborane;Hydrazine;Hydrogen (Cryo);Hydrogen Peroxide (Cryo);LFO;LiquidFuel;Methane (Cryo);Nitrogen (Cryo);Oxygen (Cryo);Tritium (Compressed Gas, Shielded);Water;Xenon Gas;Structural
		
		@resourceNames = LqdAmmonia;ArgonGas;LqdCO2;LqdCO;LqdDeuterium;LqdHelium;LqdHe3;Hexaborane;Hydrazine;LqdHydrogen;HTP;LiquidFuel,Oxidizer;LiquidFuel;LqdMethane;LqdNitrogen;LqdOxygen;LqdTritium;Water;XenonGas;Structural
		
		@resourceAmounts = #$/../ammoniaAmount$;$/../ArgonAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../LF$,$/../Oxi$;$/../LFamount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../XenonAmount$;0
	}
}


//fixes for various conflicts

@PART[*]:HAS[@MODULE[ModuleFuelTanks],@MODULE[InterstellarFuelSwitch]]:AFTER[Mk2Expansion]:NEEDS[RealFuels|ModularFuelTanks]
{
	!MODULE[ModuleFuelTanks]{}
}

@PART[*]:HAS[@MODULE[ModuleFuelTanks]|@MODULE[FSfuelSwitch],!MODULE[InterstellarFuelSwitch],#LionStatus[1]]:FINAL
{
	!MODULE[ModuleFuelTanks]{}
	!MODULE[FSfuelSwitch]{}
	MODULE
    {
		name = InterstellarFuelSwitch
		
		resourceGui = Ammonia;Argon Gas;Carbon Dioxide (Cryo);CarbonMonoxide (Cryo);Deuterium (Cryo);Helium (Cryo);Helium-3 (Cryo);Hexaborane;Hydrazine;Hydrogen (Cryo);Hydrogen Peroxide (Cryo);Kerosene;Methane (Cryo);Nitrogen (Cryo);Oxygen (Cryo);Tritium (Cryo);Water;Xenon Gas;Structural
		
		resourceNames = LqdAmmonia;ArgonGas;LqdCO2;LqdCO;LqdDeuterium;LqdHelium;LqdHe3;Hexaborane;Hydrazine;LqdHydrogen;HTP;Kerosene;LqdMethane;LqdNitrogen;LqdOxygen;LqdTritium;Water;XenonGas;Structural

		resourceAmounts = #$/../ammoniaAmount$;$/../ArgonAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../ammoniaAmount$;$/../XenonAmount$;0

		@tankMass =  0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0

		%basePartMass = #$../mass$
		volumeMultiplier = 1.0
		massMultiplier = 1
		displayCurrentTankCost = false
		hasGUI = true
		availableInFlight = true
		availableInEditor = true
		showInfo = true
	}
}

@PART[*]:HAS[@MODULE[FNModulePreecooler]]:NEEDS[WarpPlugin]:AFTER[WarpPlugin]
{
	!RESOURCE[*],*{}
	!MODULE[InterstellarFuelSwitch]{}
	!MODULE[FNModuleCryostat],*{}
	!MODULE[ModuleFuelTanks]{}
}

@PART[*]:HAS[@MODULE[InterstellarFuelSwitch]]:FINAL
{
	!percentage = NULL
	!percentsquared = NULL
	!LFamount = NULL
	!ArgonAmount = NULL
	!XenonAmount = NULL
	!ammoniaAmount = NULL
	!LF = NULL
	!Oxi = NULL
	!XenonAmount = NULL
	!OPTRsave = NULL
	!amIforIFS = NULL
	!MODULE[FSmeshSwitch],*
	{
	}
	
	!MODULE[FSfuelSwitch],*
	{
	}
	
	!MODULE[ModuleFuelTanks],*
	{
	}
	!RESOURCE[LiquidFuel]{} //fixes OPT issue
}